{"ast":null,"code":"var _jsxFileName = \"/Users/bryan/Code/booti-backend/booti-admin/analytics/react_dashboard/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    // Assuming mixpanelData is your JSON data from the API response\n    const mixpanelData = {\n      \"A. Tap Drop Marker [Total Events]\": {\n        \"all\": 24\n      },\n      \"B. Tap Finish Collecting Drop [Total Events]\": {\n        \"all\": 3\n      }\n    };\n\n    // Transform the data for Recharts\n    const transformedData = Object.entries(mixpanelData).map(([key, value]) => ({\n      name: key,\n      value: value.all\n    }));\n    setChartData(transformedData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: chartData,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"value\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Leo9Xk/Ki5G6SkYc3yZESo07mWw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","Dashboard","_s","chartData","setChartData","mixpanelData","transformedData","Object","entries","map","key","value","name","all","width","height","children","data","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","fill","_c","$RefreshReg$"],"sources":["/Users/bryan/Code/booti-backend/booti-admin/analytics/react_dashboard/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\n\nconst Dashboard = () => {\n  const [chartData, setChartData] = useState([]);\n\n  useEffect(() => {\n    // Assuming mixpanelData is your JSON data from the API response\n    const mixpanelData = {\n      \"A. Tap Drop Marker [Total Events]\": { \"all\": 24 },\n      \"B. Tap Finish Collecting Drop [Total Events]\": { \"all\": 3 }\n    };\n\n    // Transform the data for Recharts\n    const transformedData = Object.entries(mixpanelData).map(([key, value]) => ({\n      name: key,\n      value: value.all,\n    }));\n\n    setChartData(transformedData);\n  }, []);\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Bar dataKey=\"value\" fill=\"#8884d8\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,aAAa,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpG,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,YAAY,GAAG;MACnB,mCAAmC,EAAE;QAAE,KAAK,EAAE;MAAG,CAAC;MAClD,8CAA8C,EAAE;QAAE,KAAK,EAAE;MAAE;IAC7D,CAAC;;IAED;IACA,MAAMC,eAAe,GAAGC,MAAM,CAACC,OAAO,CAACH,YAAY,CAAC,CAACI,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,MAAM;MAC1EC,IAAI,EAAEF,GAAG;MACTC,KAAK,EAAEA,KAAK,CAACE;IACf,CAAC,CAAC,CAAC;IAEHT,YAAY,CAACE,eAAe,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA,CAACF,mBAAmB;IAACgB,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5ChB,OAAA,CAACR,QAAQ;MAACyB,IAAI,EAAEd,SAAU;MAACe,MAAM,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAAN,QAAA,gBAC7EhB,OAAA,CAACH,aAAa;QAAC0B,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvC3B,OAAA,CAACN,KAAK;QAACkC,OAAO,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxB3B,OAAA,CAACL,KAAK;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACT3B,OAAA,CAACJ,OAAO;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACX3B,OAAA,CAACP,GAAG;QAACmC,OAAO,EAAC,OAAO;QAACC,IAAI,EAAC;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE1B,CAAC;AAACzB,EAAA,CA9BID,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAgCf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}