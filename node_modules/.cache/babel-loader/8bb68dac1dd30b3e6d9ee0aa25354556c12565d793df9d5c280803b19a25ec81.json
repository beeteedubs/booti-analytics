{"ast":null,"code":"var _jsxFileName = \"/Users/bryan/Code/booti-backend/booti-admin/analytics/react_dashboard/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, LabelList, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Async function to fetch data\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/dashboard');\n        const data = await response.json();\n        console.log(data.mixpanelData);\n        if (response.ok) {\n          // Transform Mixpanel data for Recharts\n          const transformedData = Object.entries(data.mixpanelData).map(([key, value]) => ({\n            name: key,\n            value: value.all\n          }));\n          setChartData(transformedData);\n        } else {\n          setError('Error fetching Mixpanel data');\n        }\n      } catch (err) {\n        console.error('Fetch error:', err);\n        setError('Error fetching Mixpanel data');\n      }\n    };\n\n    // Call the fetchData function\n    fetchData();\n  }, []); // Empty dependency array means this runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Nike Analytics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"value\",\n          fill: \"#8884d8\",\n          children: /*#__PURE__*/_jsxDEV(LabelList, {\n            dataKey: \"value\",\n            position: \"top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"vIqGXmKmUq1FAvDj+MJ1ocKUQq0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","LabelList","Bar","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","Dashboard","_s","chartData","setChartData","error","setError","fetchData","response","fetch","data","json","console","log","mixpanelData","ok","transformedData","Object","entries","map","key","value","name","all","err","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","position","_c","$RefreshReg$"],"sources":["/Users/bryan/Code/booti-backend/booti-admin/analytics/react_dashboard/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, LabelList, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\n\nconst Dashboard = () => {\n  const [chartData, setChartData] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Async function to fetch data\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/dashboard');\n        const data = await response.json();\n        console.log(data.mixpanelData);\n        if (response.ok) {\n          // Transform Mixpanel data for Recharts\n          const transformedData = Object.entries(data.mixpanelData).map(([key, value]) => ({\n            name: key,\n            value: value.all,\n          }));\n          setChartData(transformedData);\n        } else {\n          setError('Error fetching Mixpanel data');\n        }\n      } catch (err) {\n        console.error('Fetch error:', err);\n        setError('Error fetching Mixpanel data');\n      }\n    };\n\n    // Call the fetchData function\n    fetchData();\n  }, []); // Empty dependency array means this runs once on mount\n\n  return (\n    <div>\n      <h1>Nike Analytics Dashboard</h1>\n      {error && <p>{error}</p>}\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Bar dataKey=\"value\" fill=\"#8884d8\">\n            <LabelList dataKey=\"value\" position=\"top\" />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}